name: Security Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 0'  # Run weekly

jobs:
  trivy:
    name: Trivy Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif
      - name: Upload Trivy SARIF as artifact
        uses: actions/upload-artifact@v3
        with:
          name: trivy-results
          path: trivy-results.sarif
      - name: Summarize Trivy results in workflow summary
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const sarif = JSON.parse(fs.readFileSync('trivy-results.sarif', 'utf8'));
            let findings = 0;
            let summary = '';
            for (const run of sarif.runs || []) {
              findings += (run.results || []).length;
              if (run.results) {
                for (const res of run.results.slice(0, 10)) { // Show up to 10 findings
                  const ruleId = res.ruleId || '';
                  const severity = (res.level || '').toUpperCase();
                  const message = res.message && res.message.text ? res.message.text : '';
                  summary += `- **${severity}** [${ruleId}]: ${message}\n`;
                }
              }
            }
            summary = `### Trivy Scan Findings: ${findings}\n` + summary;
            core.summary.addRaw(summary).write();

  grype:
    name: Grype Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: anchore/scan-action@v6
        with:
          path: "."
          fail-build: false
          output-file: grype-results.sarif
      - name: Upload Grype scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: grype-results.sarif
      - name: Upload Grype SARIF as artifact
        uses: actions/upload-artifact@v3
        with:
          name: grype-results
          path: grype-results.sarif
      - name: Summarize Grype results in workflow summary
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const sarif = JSON.parse(fs.readFileSync('grype-results.sarif', 'utf8'));
            let findings = 0;
            let summary = '';
            for (const run of sarif.runs || []) {
              findings += (run.results || []).length;
              if (run.results) {
                for (const res of run.results.slice(0, 10)) { // Show up to 10 findings
                  const ruleId = res.ruleId || '';
                  const severity = (res.level || '').toUpperCase();
                  const message = res.message && res.message.text ? res.message.text : '';
                  summary += `- **${severity}** [${ruleId}]: ${message}\n`;
                }
              }
            }
            summary = `### Grype Scan Findings: ${findings}\n` + summary;
            core.summary.addRaw(summary).write();